from tkinter import *
from board.내게시판crud import *
from board.내게시판_전체ui import *
from board.친구검색ui import *
from board.crud import *
from board.ui import *



def myBoard_ui(): #내게시판 버튼 누를 때 아이디 연동되도록
    global content_input
    w = Toplevel()
    w.geometry("1000x700")
    w.title("내 게시판")
    w.configure(bg = "white")
    
    logo_icon = PhotoImage(file = "web.png")
    logo = Label(w, image = logo_icon)
    logo.place(x = 15, y = 15)
    
    button1 = Button(w, text = "친구보기", font = ("맑은 고딕", 10), command = friend_list_ui)
    button2 = Button(w, text = "마이페이지", font = ("맑은 고딕", 10))#command = my_info_update_ui
    button1.place(x = 830, y = 15)
    button2.place(x = 900, y = 15)
    
    
    ### 검색
    select_input = Entry(w, font = ("맑은 고딕", 15), fg = "black", bg = "white", width = 46)
    select_input.place(x = 250, y = 100)
    
    select = Button(w, text = "검색", font = ("맑은 고딕", 10), fg = "black", bg = "white", width = 6,
                    command = member_select_ui)
    select.place(x = 765, y = 100)

    
    ### 내 정보 출력
    info = myInfo()
    infoList = []
    for i in info:
        infoList.append([i][0])
    
    profile_icon = PhotoImage(file = "web.png")    #profile
    profile = Label(w, image = profile_icon)
    name = Label(w, text = infoList[2], font = ("맑은 고딕", 15), fg = "dark gray", width = 40)
    birthday = Label(w, text = infoList[5], font = ("맑은 고딕", 15), fg = "dark gray", width = 40)
    country_city = Label(w, text = infoList[3:5], font = ("맑은 고딕", 15), fg = "dark gray", width = 40)
    
    profile.place(x = 250, y = 150)
    name.place(x = 370, y = 150)
    birthday.place(x = 370, y = 184)
    country_city.place(x = 370, y = 218)
    

    ### 게시물 등록
    content_input = Entry(w, font = ("맑은 고딕", 15), fg = "black", bg = "white", width = 51)
    content_input.place(x = 250, y = 300)
    
    content_insert = Button(w, text = "등록", font = ("맑은 고딕", 10), fg = "white", bg = "blue", width = 6,
                    command = insert_process)
    content_insert.place(x = 820, y = 300)

    
    ### 게시물 목록 출력 
    contList = content_list() 
    
    start = 1
    for record in contList:
#         profiles = Label(w, text = record[])
        conNums = Label(w, text = record[0], font = ("맑은 고딕", 13), fg = "black", bg = "gray", width = 5)
        names = Label(w, text = record[1], font = ("맑은 고딕", 13), fg = "black", bg = "gray", width = 10)
        dates = Label(w, text = record[3], font = ("맑은 고딕", 13), fg = "black", bg = "gray", width = 40)
        contents = Label(w, text = record[2], font = ("맑은 고딕", 13), fg = "black", bg = "gray", width = 50)
         
#         profiles.place(x = 250, )
        conNums.grid(row = start, column = 20)
        names.grid(row = start, column = 400)
        dates.grid(row = start, column = 400)
        contents.grid(row = start, column = 420)
        start += 1
        
    
    ### 게시물 수정, 삭제 버튼
    content_update = Button(w, text = "수정", font = ("맑은 고딕", 10), fg = "white", bg = "blue", width = 6,
                    command = update_process)
    content_update.place(x = 820, y = 330)
    content_delete = Button(w, text = "삭제", font = ("맑은 고딕", 10), fg = "white", bg = "blue", width = 6,
                    command = delete_process)
    content_delete.place(x = 820, y = 360)

    
    w.mainloop()
    
if __name__ == '__main__':
    myBoard_ui()
