from tkinter import *
from tkinter import messagebox
from board.내게시판crud import *

from tkinter import *
from board.내게시판crud import *
from board.친구검색ui import *
# from board.crud import *
# from board.ui import *

content_num_input, content_input = None, None


def insert_process():
    global content
    content = content_input.get("1.0", 'end-1c')
    print(content)
    insert()
    print("< 게시물 등록 완료 >")


def update_process():
    global content_num, content
    content_num = content_num_input.get()
    content = content_input.get()
    
    conNum = content_list()
    conNum_list = []
    
    for i in conNum:
        conNum_list.append([i][0])
         
    while True:                 
        if content_num not in conNum_list:
            messagebox.showerror("게시물 번호 오류", "없는 게시물 번호입니다.")        
            break
        else:
            update(content, content_num)
            print("< 게시물 수정 완료 >")
    
    
def delete_process():
    global content_num
    content_num = content_num_input.get()
    
    conNum = content_list()
    conNum_list = []
    
    for i in conNum:
        conNum_list.append([i][0])
         
    while True:                 
        if content_num not in conNum_list:
            messagebox.showerror("게시물 번호 오류", "없는 게시물 번호입니다.")        
            break
        else:
            delete(content_num)
            print("< 게시물 삭제 완료 >")
    

'''=============================================================================================='''


def update_ui():
    global content_num_input, content_input
    w = Toplevel()
    w.geometry("300x300")
    w.title("게시물 수정")
    w.configure(bg = "white")
    
    content_num_text = Label(w, text = "게시물 번호 입력", font = ("맑은 고딕", 10), fg = "black", bg = "white")
    content_num_input = Entry(w, font = ("맑은 고딕", 20), fg = "black", bg = "white", width = 15)
    content_num_text.pack()
    content_num_input.pack()
    
    content_text = Label(w, text = "수정할 게시물 내용 입력", font = ("맑은 고딕", 10), fg = "black", bg = "white")
    content_input = Entry(w, font = ("맑은 고딕", 20), fg = "black", bg = "white", width = 15)
    content_text.pack()
    content_input.pack()
    
    button_y = Button(w, text = "수정", font = ("맑은 고딕", 10), fg = "white", bg = "blue", width = 7, command = update_process)
    button_n = Button(w, text = "취소", font = ("맑은 고딕", 10), bg = "white", width = 7, command = quit)
    button_y.place(x = 90, y = 250)
    button_n.place(x = 160, y = 250)
    
    w.mainloop() 

 
def delete_ui():
    global content_num_input
    w = Tk()
    w.geometry("300x150")
    w.title("게시물 삭제")
    w.configure(bg = "white")

    content_num_text = Label(w, text = "게시물 번호 입력", font = ("맑은 고딕", 10), fg = "black", bg = "white")
    content_num_input = Entry(w, font = ("맑은 고딕", 20), fg = "black", bg = "white", width = 15)
    content_num_text.pack()
    content_num_input.pack()

    button_y = Button(w, text = "삭제", font = ("맑은 고딕", 10), fg = "white", bg = "red", width = 7, command = delete_process)
    button_n = Button(w, text = "취소", font = ("맑은 고딕", 10), bg = "white", width = 7, command = quit)
    button_y.place(x = 90, y = 100)
    button_n.place(x = 160, y = 100)
    
    w.mainloop()


def myBoard_ui(): #내게시판 버튼 누를 때 아이디 연동되도록
    global content_input
    w = Toplevel()
    w.geometry("1000x700")
    w.title("내 게시판")
    w.configure(bg = "white")
    
    logo_icon = PhotoImage(file = "web.png")
    logo = Label(w, image = logo_icon)
    logo.place(x = 15, y = 15)
    
    button1 = Button(w, text = "친구보기", font = ("맑은 고딕", 10), command = friend_list_ui)
    button2 = Button(w, text = "마이페이지", font = ("맑은 고딕", 10), command = my_info_update_ui)
    button1.place(x = 830, y = 15)
    button2.place(x = 900, y = 15)
    
    
    ### 검색
    select_input = Entry(w, font = ("맑은 고딕", 15), fg = "black", bg = "white", width = 46)
    select_input.place(x = 250, y = 100)
    
    select = Button(w, text = "검색", font = ("맑은 고딕", 10), fg = "black", bg = "white", width = 6,
                    command = member_select_ui)
    select.place(x = 765, y = 100)

    
    ### 내 정보 출력
#     id = '100'
    
    info = myInfo()
    infoList = []
    for i in info:
        infoList.append([i][0])
    
    profile_icon = PhotoImage(file = infoList[7])    #profile
    profile = Label(w, image = profile_icon)
    name = Label(w, text = infoList[2], font = ("맑은 고딕", 15), fg = "dark gray", width = 40)
    birthday = Label(w, text = infoList[5], font = ("맑은 고딕", 15), fg = "dark gray", width = 40)
    country_city = Label(w, text = infoList[3:5], font = ("맑은 고딕", 15), fg = "dark gray", width = 40)
    
    profile.place(x = 250, y = 150)
    name.place(x = 370, y = 150)
    birthday.place(x = 370, y = 184)
    country_city.place(x = 370, y = 218)
    

    ### 게시물 등록
    content_input = Text(w, font = ("맑은 고딕", 12), fg = "black", bg = "white", width = 63, height = 4)
    content_input.place(x = 247, y = 300)
    
    content_insert = Button(w, text = "등록", font = ("맑은 고딕", 10), fg = "white", bg = "blue", width = 6,
                    command = insert_process)
    content_insert.place(x = 823, y = 300)

    
    ### 게시물 목록 출력 
    contList = content_list()
    result = list(myInfo())
    print(result)
    
    y1 = 400
    for r in range(len(contList)):
#         for record in contList:
        profiles_icon = PhotoImage(file = result[7])
        profiles = Label(w, image = profiles_icon, width = 100, height = 100)
        conNums = Label(w, text = contList[r][0], font = ("맑은 고딕", 13), fg = "gray", width = 5)
        names = Label(w, text = result[2], font = ("맑은 고딕", 13), fg = "black", width = 5)
        contents = Label(w, text = contList[r][1], font = ("맑은 고딕", 13), fg = "black", width = 45)
        
        profiles.place(x = 250, y = y1)
        conNums.place(x = 360, y = y1)
        names.place(x = 400, y = y1)
        contents.place(x = 360, y = y1 + 30)
        y1 += 100

    
    ### 게시물 수정, 삭제 버튼
    content_update = Button(w, text = "수정", font = ("맑은 고딕", 10), fg = "black", bg = "white", width = 6,
                    command = update_ui)
    content_update.place(x = 823, y = 330)
    content_delete = Button(w, text = "삭제", font = ("맑은 고딕", 10), fg = "red", bg = "white", width = 6,
                    command = delete_ui)
    content_delete.place(x = 823, y = 360)

    
    w.mainloop()
    
if __name__ == '__main__':
    myBoard_ui()
